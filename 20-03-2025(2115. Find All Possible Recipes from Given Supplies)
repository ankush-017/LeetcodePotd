#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    vector<string> findAllRecipes(vector<string>& recipes, vector<vector<string>>& ingredients, vector<string>& supplies) {

        set<string> supply(supplies.begin(), supplies.end());
        map<string, vector<string>> graph; // adjacency list
        map<string, int> indegree;

        for (int i = 0; i < recipes.size(); i++) {
            string recipe = recipes[i];
            indegree[recipe] = 0;

            for (string ing : ingredients[i]) {
                if (supply.find(ing) == supply.end()) {
                    graph[ing].push_back(recipe);
                    indegree[recipe]++;
                }
            }
        }

        queue<string> q;
        for (string recipe : recipes) {
            if (indegree[recipe] == 0) {
                q.push(recipe);
            }
        }

        vector<string> result;
        while (!q.empty()) {
            string curr = q.front();
            q.pop();
            result.push_back(curr);

            for (string next : graph[curr]) {
                indegree[next]--;
                if (indegree[next] == 0) {
                    q.push(next);
                }
            }
        }

        return result;
    }
};
